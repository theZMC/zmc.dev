---
import "@styles/global.css";
import Header from "@components/Header.astro";
import type Social from "@lib/types/social";
import { FileUser, Github, Linkedin, Mail } from "@lucide/astro";
import SocialList from "@components/SocialList.astro";

interface Props {
  pageTitle: string;
  tags?: string[];
  metaDescription?: string;
  metaImage?: string;
  isIndex?: boolean;
}

const { pageTitle, isIndex } = Astro.props;
const socials: Social[] = [
  {
    name: "LinkedIn",
    url: "https://www.linkedin.com/in/thezmc/",
    icon: Linkedin,
  },
  {
    name: "GitHub",
    url: "https://github.com/theZMC/",
    icon: Github,
  },
  {
    name: "Email",
    url: "mailto:inquiries@zmc.dev",
    icon: Mail,
  },
  {
    name: "Resume",
    url: "/resume",
    icon: FileUser,
  },
];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={Astro.props.metaDescription} />
    <meta name="keywords" content={Astro.props.tags?.join(", ")} />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:site" content="@theZMC" />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={Astro.props.metaDescription} />
    {
      Astro.props.metaImage ? (
        <meta name="twitter:image" content={Astro.props.metaImage} />
      ) : null
    }
    <meta property="og:title" content={pageTitle} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.request.url} />
    {
      Astro.props.metaImage ? (
        <meta property="og:image" content={Astro.props.metaImage} />
      ) : null
    }
    <meta property="og:description" content={Astro.props.metaDescription} />
    <meta property="og:site_name" content="ZMC.DEV" />
    <meta property="og:locale" content="en_US" />
    <title>{pageTitle}</title>
  </head>
  <body>
    <div>
      <Header {isIndex} />
      <main>
        <slot />
        {socials.length && <SocialList {socials} />}
      </main>
    </div>
  </body>
</html>

<style lang="scss">
  @reference "tailwindcss";

  @keyframes gradient {
    0% {
      background-position: 0% 0%;
    }
    100% {
      background-position: 400% 400%;
    }
  }

  body {
    @apply bg-[#b6e9ff];
    @apply bg-size-[400%];
    @apply py-2 px-0;
    @apply min-h-[100vh];
    @apply flex items-center justify-center;
    @apply bg-linear-to-r from-[#ffb879] from-0% via-[#b6e9ff] via-50%
      to-[#ffb879] to-100%;
    animation: gradient 300s ease infinite;
  }
  div {
    max-width: 50rem;
    min-width: 0;
  }
  main {
    @apply m-4;
    @apply flex flex-col items-center;
    @apply gap-4;
  }
  @media print {
    body {
      background: none;
    }
    main {
      margin: 0;
    }
  }
</style>
